############################################  IAM  ############################################################

-> IAM enables you to securely control access to aws services and resources for users of your AWS account.

   . You use IAM to control who is authenticated (signed in) and authorized (has permissions) to use resources.

   . Using IAM you can create and manage AWS users and groups and assign permission to them to allow and deny their access to AWS
     resouces.

-> How to manage users:

  . you can create users in IAM assign them individual security credentials in other words,access keys,passwords,and multi-factor authentication devices.
  . Permissions are managed by creating IAM policy statement.
  
-> aws virtusal MFA app

IAM Features: 

-> Shared access to your AWS account:

   . You can grant other people permission to administer and use resources in your AWS account without having to share your password or access key.
   . You can grant different permissions to different people for different resources.

-> policy:

   . contains permissions to add to the specified users or groups. 
   . (IAM) requires that policies be in JSON format.
   
-> Introduction to JSON Policies:

    . To assign permissions to a user, group, role, or resource, you create a JSON policy, which is a document that defines permissions.
	
	Effect – whether the policy allows or denies access

    Action – the list of actions that are allowed or denied by the policy

    Resource – the list of resources on which the actions can occur

    Condition (Optional) – the circumstances under which the policy grants permission
	
-> Policies are documents that are stored using JSON. A policy consists of one or more statements

{
  "Version": "2012-10-17",
  "Statement": {
    "Effect": "Allow",
    "Action": "s3:ListBucket",
    "Resource": "arn:aws:s3:::example_bucket"
  }
}

-> Role:
    . An IAM role is similar to a user, in that it is an AWS identity with permission policies that determine what the identity can and cannot do in AWS.
	. However, instead of being uniquely associated with one person, a role is intended to be assumable by anyone who needs it.
   
   


